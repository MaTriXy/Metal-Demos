//vert
#version 120
varying vec3 vN;
varying vec3 vClr;
uniform mat4 ModelViewProjectionMatrix;
uniform mat4 ModelViewMatrix;
uniform mat4 NormalMatrix;
uniform vec3 LightPosition = vec3(0.0, 20.0, 30.0); //LR, -DU+, -FN+
void main() {
    vN = normalize((NormalMatrix * vec4(gl_Normal.xyz, 1.0)).xyz);
    gl_Position = ModelViewProjectionMatrix * vec4(gl_Vertex.xyz, 1.0);
    vClr = gl_Color.rgb;
}
//frag
#version 120
varying vec3 vN;
varying vec3 vClr;
uniform sampler2D MatCap;
void main() {
	vec3 n = normalize(vN);
	vec2 uv = n.xy * 0.5 + 0.5;
	vec3 mClr = texture2D(MatCap,uv.xy).rgb * vClr.rgb;
	gl_FragColor = vec4(mClr, 1.0);
} 